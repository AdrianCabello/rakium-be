generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  role         UserRole
  clientId     String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  client       Client?   @relation(fields: [clientId], references: [id])
  projects     Project[] @relation("CreatedBy")

  @@map("User")
}

model Client {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
  projects  Project[]

  @@map("Client")
}

model Project {
  id              String           @id @default(uuid())
  name            String
  type            ProjectType?
  status          ProjectStatus    @default(DRAFT) @map("status")
  category        ProjectCategory?
  description     String?
  longDescription String?          @map("long_description")
  imageBefore     String?          @map("image_before")
  imageAfter      String?          @map("image_after")
  latitude        Float?           @map("latitude")
  longitude       Float?           @map("longitude")
  address         Json?            @map("address")
  country         String?
  state           String?
  city            String?
  area            String?
  duration        String?
  date            String?
  url             String?
  clientId        String           @map("client_id")
  challenge       String?
  solution        String?
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  beforeImageId   String?          @unique @map("before_image_id")
  afterImageId    String?          @unique @map("after_image_id")
  createdBy       String?
  endDate         DateTime?        @map("end_date")
  startDate       DateTime?        @map("start_date")
  // Campos de informaci√≥n interna (opcionales)
  contactName     String?          @map("contact_name")
  contactPhone    String?          @map("contact_phone")
  contactEmail    String?          @map("contact_email")
  budget          String?          @map("budget")
  invoiceStatus   String?          @map("invoice_status")
  notes           String?          @map("notes")
  order           Int              @default(0) @map("order")
  gallery         Gallery[]
  videos          Video[]
  afterImage      Gallery?         @relation("AfterImage", fields: [afterImageId], references: [id])
  beforeImage     Gallery?         @relation("BeforeImage", fields: [beforeImageId], references: [id])
  client          Client           @relation(fields: [clientId], references: [id], onDelete: Cascade)
  creator         User?            @relation("CreatedBy", fields: [createdBy], references: [id])

  @@map("projects")
  @@unique([clientId, order], name: "unique_order_per_client")
}

model Gallery {
  id            String   @id @default(uuid())
  url           String
  title         String?
  description   String?
  order         Int      @default(0)
  projectId     String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  project       Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  afterImageOf  Project? @relation("AfterImage")
  beforeImageOf Project? @relation("BeforeImage")

  @@map("Gallery")
}

model Video {
  id          String   @id @default(uuid())
  title       String
  description String?
  youtubeUrl  String   @map("youtube_url")
  order       Int      @default(0)
  projectId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("Video")
}

enum UserRole {
  ADMIN
  CLIENT_ADMIN
  CLIENT
}

enum ProjectType {
  LANDING
  ECOMMERCE
  INMOBILIARIA
  CUSTOM
}

enum ProjectStatus {
  DRAFT
  PUBLISHED
  PENDING
}

enum ProjectCategory {
  ESTACIONES
  TIENDAS
  COMERCIALES
}
