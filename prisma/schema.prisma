// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  role         UserRole
  clientId     String?
  client       Client?   @relation(fields: [clientId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  projects     Project[] @relation("CreatedBy")

  @@map("User")
}

model Client {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  users     User[]
  projects  Project[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("Client")
}

model Project {
  id                String          @id @default(uuid())
  name              String
  type              ProjectType
  status            ProjectStatus   @default(DRAFT)
  category          ProjectCategory
  description       String
  longDescription   String          @map("long_description")
  imageBefore       String?         @map("image_before")
  imageAfter        String?         @map("image_after")
  latitude          Float           @map("latitude")
  longitude         Float           @map("longitude")
  address           String          @map("address")
  country           String          @map("country")
  state             String          @map("state")
  city              String          @map("city")
  area              String
  duration          String
  date              String
  clientId          String
  client            Client          @relation(fields: [clientId], references: [id])
  challenge         String
  solution          String
  showOnHomepage    Boolean         @default(true) @map("show_on_homepage")
  createdBy         String?
  creator           User?           @relation("CreatedBy", fields: [createdBy], references: [id])
  createdAt         DateTime        @default(now()) @map("created_at")
  updatedAt         DateTime        @updatedAt @map("updated_at")
  gallery           Gallery[]

  @@map("Project")
}

model Gallery {
  id          String    @id @default(uuid())
  url         String
  title       String?
  description String?
  order       Int       @default(0)
  projectId   String
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("Gallery")
}

enum UserRole {
  ADMIN
  CLIENT_ADMIN
  CLIENT
}

enum ProjectType {
  LANDING
  ECOMMERCE
  INMOBILIARIA
  CUSTOM
}

enum ProjectStatus {
  DRAFT
  PUBLISHED
}

enum ProjectCategory {
  ESTACIONES
  TIENDAS
  COMERCIALES
}
